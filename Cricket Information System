#Home page start

home() {
clear

echo " --------Welcome To CrickInfoBD-------- \n"
echo "1. User Access"
echo "2. Admin access"
echo "3. Quit"

echo -n "Enter your Choice (1/2/3) : "
read choice 

    case $choice in
        1)
            
            userAccess
            
            ;;
        2)
            adminAccess
            
            ;;
        
        3)
            echo "Goodbye!"
            sleep 2
            clear
            exit 0
            ;;
        *)
            echo "Invalid choice. Please select 1, 2, or 3."
            sleep 2
            home
            ;;
    esac
	
		
}

#Home page end








#adminAccess page start

adminAccess() {
clear 

echo  "--------Welcome To CrickInfoBD Admin Panel-------- \n"
echo "1. Login"
echo "2. Quit"

echo -n "Enter your Choice (1/2) : "
read choice 

    case $choice in
        1)
            
            adminLogin
            
            
            ;;
        2)
            echo "Goodbye!"
            sleep 2
            
            clear
            exit 0
            ;;
            
        *)
            echo "Invalid choice. Please select 1 or 2."
            sleep 2
            adminAccess
            ;;
    esac
	
		
}

#adminAccess page end







#Admin Login page start

adminLogin() {

clear

echo "\n"
echo "Enter admin Password : "
read password

if [ "$password" != "12345678" ]; then
    echo "Password didn't match, please try again! "
    sleep 2
    clear
    adminLogin

else
    adminloginOption
fi


}

#Admin Login page end







#Admin login options start

adminloginOption() {

clear

echo " --------Login Successfull-------- \n"
echo " 1. Add Players Personal Info"
echo " 2. Add Players Statistical Info"
echo " 3. Add Upcoming Matches"
echo " 4. Add Coaches"
echo " 5. Add Board Members"

echo " 6. Update Players Personal Info"
echo " 7. Update Players Statistical Info"
echo " 8. Update Upcoming Matches"
echo " 9. Update Coaches"
echo "10. Update Board Members"

echo "11. Logout"

echo -n "Enter your Choice between 1 to 11 : "
read choice 

    case $choice in
    
        1)
            
            addPlayerPersonalInfo
            ;;
        2)
            addPlayerStatisticalInfo
            
            ;;
        3)
            addUpcomingMatches
            
            ;;
        4)
            addCoaches
            
            ;;
        5) 
            addBoardMembers
            ;;
        6)
            updatePlayerPersonalInfo
            
            ;;
        7)
            updatePlayerStatisticalInfo
            
            ;;
        8)
            updateUpcomingMatches
            
            ;;
        9)
            updateCoaches
            
            ;;
        10)
            updateBoardMembers
            
            ;;
      
        11) 
        	
            clear
            echo -n "Good Bye"
            sleep 2
            exit 0
            ;;
        *)
            echo "Invalid choice. Please select between 1 to 11 ."
            clear
            sleep 2
            adminloginOption
            
            ;;
    esac
	
		
}

#Admin login option end












#user Access page start

userAccess() {
clear 

echo  "--------Welcome To CrickInfoBD-------- \n"
echo "1. Login"
echo "2. Registration"
echo "3. View Recent Matches"
echo "4. Buy Subscription"
echo "5. Quit"

echo -n "Enter your Choice (1/2/3/4/5) : "
read choice 

    case $choice in
        1)
            
            signIn
            
            ;;
        2)
            signUp
            
            ;;
        3)
            displayAllUpcomingMatches
            
            ;;
        4)
            pricing
            
            ;;
        5)
            echo "Goodbye!"
            sleep 2
            clear 
            exit 0
            ;;
        *)
            echo "Invalid choice. Please select 1, 2, 3, or 4."
            sleep 2
            userAccess
            ;;
    esac
	
		
}

#userAccess page end








#Sign In page start


signIn() {

clear
    echo "Enter Your Information to Login: "
    read -p "Enter Email: " login_email
    read -p "Enter Password: " login_password

    
    if grep -q ":$login_email:$login_password:" "$datafileuser"; then
       echo "User exists. Login successful."
       sleep 10
       userloginOption
    else
        echo "User with the provided email and password does not exist."
        sleep 10
        signIn
    fi
}


#Sign In page end







#user login options start

userloginOption() {

clear

echo "--------Login Successfull-------- \n"
echo "1. View Players Personal Info"
echo "2. View Players Statistical Info"
echo "3. View Coaches"
echo "4. View Board Members"
echo "5. View Recent Matches"
echo "6. Update personal info"
echo "7. Logout"

echo -n "Enter your Choice (1/2/3/4/5/6/7) : "
read choice 

    case $choice in
        1)
            
            displayPlayerPersonalDataByJersey
            ;;
        2)
            displayPlayerStatisticalDataByJersey
            
            ;;
        3)
            displayCoachDataByCoachID
            
            ;;
        4)
            displayBoardMemberDataByMemberID
            
            ;;
        5)
            displayAllUpcomingMatches
            
            ;;
        6)
            updateUser
            
            ;;

        7)  
            clear
            echo -n "Good Bye"
            sleep 2
            exit 0
            ;;
        *)
            echo "Invalid choice. Please select 1, 2, 3, 4, 5 or 6."
            sleep 3
            userloginOption
            
            ;;
    esac
	
		
}

#user login option end





# Function to confirm program exit start

exitConfirmation() {


    read -p "Are you sure you want to exit? (Y/N): " choice
    case $choice in
        [Yy])
            echo "Exiting program."
            userloginOption
            ;;
            
        *)
            echo "Invalid choice. Please enter Y for Yes or N for No."
            exitConfirmation
            ;;
    esac
}

# Function to confirm program exit end






#viewPlayers personal info page start


displayPlayerPersonalDataByJersey() {

    clear
    
    read -p "Enter Jersey No to search for a player: " jersey
    if grep -q "^$jersey:" "$player_personal_info_file"; then
        player_data=$(grep "^$jersey:" "$player_personal_info_file")
        echo "Player Data for Jersey No $jersey:"
        echo "$player_data"
        
        exitConfirmation      
        
    else
        echo "Player with Jersey No $jersey does not exist."
        sleep 2
        userloginOption
    fi
}


#viewPlayers personal info  page end





#viewPlayers statistical info page start


displayPlayerStatisticalDataByJersey() {
    clear
    read -p "Enter Jersey No to search for a player's statistical data: " jersey
    if grep -q "^$jersey:" "$player_stastical_info_file"; then
        player_statistical_data=$(grep "^$jersey:" "$player_stastical_info_file")
        echo "Player Statistical Data for Jersey No $jersey:"
        echo "$player_statistical_data"
        exitConfirmation
        
    else
        echo "Player with Jersey No $jersey does not exist in the statistical data."
        sleep 2
        userloginOption
    fi
}

#viewPlayers statistical info page end





#viewCoarches page start


displayCoachDataByCoachID() {
    clear
    
    read -p "Enter Coach ID to search for a coach's data: " coach_id
    if grep -q "^$coach_id:" "$coach_info_file"; then
        coach_data=$(grep "^$coach_id:" "$coach_info_file")
        echo "Coach Data for Coach ID $coach_id:"
        echo "$coach_data"
        exitConfirmation
        
    else
        echo "Coach with Coach ID $coach_id does not exist in the coach data."
        sleep 2
        userloginOption
    fi
}


#viewCoarches page end




#view BoardMembers page start

displayBoardMemberDataByMemberID() {

    clear
    
    read -p "Enter Board Member ID to search for a board member's data: " member_id
    if grep -q "^$member_id:" "$board_member_file_info"; then
        board_member_data=$(grep "^$member_id:" "$board_member_file_info")
        echo "Board Member Data for Member ID $member_id:"
        echo "$board_member_data"
        exitConfirmation
        
    else
        echo "Board member with Member ID $member_id does not exist in the board member data."
        sleep 2
        userloginOption
    fi
    
}


#view BoardMembers page end





#view Recent Matches page start

displayAllUpcomingMatches() {

    clear
    echo "Upcoming Matches Data:"
    while IFS= read -r line; do
        echo "$line"
    done < "$upcoming_match_info_file"
    exitConfirmation
    
}


#view Recent Matches page end






#update user data start

updateUser() {
clear 

    read -p "Enter User ID to update user info: " old_user_id
    if grep -q "^$old_user_id:" "$datafileuser"; then
        echo "Enter updated user details:"
        read -p "New User ID: " new_user_id
        read -p "Name: " name
        read -p "Email: " email
        read -p "Password: " password

        # Set the default value for "Type" as "free"
        type="free"

        sed -i "s/^$old_user_id:.*$/$new_user_id:$name:$email:$password:$type/" "$datafileuser"
        echo "User information updated."
        exitConfirmation
        
    else
        echo "User with ID $old_user_id does not exist."
        sleep 2
        updateUser
        
    fi
}

#update user data end






#Sign up page start

datafileuser="userInfo.txt"

signUp() {

clear

    echo "Enter user details: "
    read -p "User ID: " user_id
    read -p "Name: " name
    read -p "Email: " email
    read -p "Password: " password

    # Set the default value for "Type" as "free"
    type="free"

    # Check if the user already exists
    if grep -q "^$user_id:" "$datafileuser"; then
        echo "User with ID $user_id already exists."
        sleep 2
        signUp
    else
        echo "$user_id:$name:$email:$password:$type" >> "$datafileuser"
        echo "User added successfully."
        exitConfirmation
    fi
}

#Sign Up page end





# Function to confirm program exit of admin start

exitConfirmationAdmin() {


    read -p "Do you want to exit? (Y/N): " choice
    case $choice in
        [Yy])
            echo "Exiting program."
            adminloginOption
            ;;
            
        *)
            echo "Invalid choice. Please enter Y for Yes or N for No."
            exitConfirmationAdmin
            ;;
    esac
}

# Function to confirm program exit of admin end





#Adding player's Personal info page start


player_personal_info_file="player_personal_data.txt"

addPlayerPersonalInfo() {
clear
   
    echo "Enter player's details to add player's Personal info: "
    read -p "Jersey No: " jersey
    # Check if the player already exists
    if grep -q "^$jersey:" "$player_personal_info_file"; then
        echo "Player with Jersey No $jersey already exists."
        sleep 2
        addPlayerPersonalInfo
    else
    	read -p "Name: " name
	read -p "Date of Birth: " dob
	read -p "Age: " age
	read -p "Role: " role
	read -p "Batting Style: " batting_style
	read -p "Bowling Style: " bowling_style
	
        echo "$jersey:$name:$dob:$age:$role:$batting_style:$bowling_style" >> "$player_personal_info_file"
        sleep 2	
    	echo "Player $jNo is Added successfully! "
    	exitConfirmationAdmin
        
    fi   
    
    
}


#Adding player's Personal info page end







#Adding player's Statistical info page start


player_stastical_info_file="player_statistical_info_file.txt"

# Function to add a new player's information
addPlayerStatisticalInfo() {
clear

    echo "Enter player's details to add player's Statistical info:"
    read -p "Jersey No: " jersey
    
    # Check if the player already exists
    if grep -q "^$jersey:" "$player_stastical_info_file"; then
        echo "Player with Jersey No $jersey already exists."
        sleep 5
        addPlayerStatisticalInfo
    
    else
    	read -p "Played Matches: " played_match
	read -p "Innings Played: " innings_played
	read -p "Innings Not Out: " innings_not_out
	read -p "Balls Played: " balls_played
	read -p "Runs Taken: " runs_taken
	read -p "Balls Bowled: " balls_bowled
	read -p "Wickets Taken: " wickets_taken
	read -p "Centuries: " centuries
	read -p "Fifties: " fifties
	
        dismisal=$(expr $played_match - $innings_not_out)
        batting_avg=$(expr $runs_taken / $dismisal)
        bowling_strike_rate=$(expr $balls_bowled / $wickets_taken)
        batting_strike_rate=$(expr $runs_taken \* 100 / $balls_played)
        economy_rate=$(expr $runs_taken / $balls_bowled \* 6)

        echo "$jersey:$played_match:$innings_played:$innings_not_out:$balls_played:$runs_taken:$balls_bowled:$wickets_taken:$centuries:$fifties:$dismisal:$batting_avg:$bowling_strike_rate:$batting_strike_rate:$economy_rate" >> "$player_stastical_info_file"
        echo "player's statistical info is Added successfully!"
        sleep 2
        exitConfirmationAdmin
    fi

    
}


#Adding player's Statistical info page end







#Adding coach's info page start

coach_info_file="coaches_info.txt"

addCoaches() {

clear

    echo "Enter coach's details to add coach's info:"
    read -p "Coach ID: " coach_id
    
    # Check if the coach already exists
    if grep -q "^$coach_id:" "$coach_info_file"; then
        echo "Coach with ID $coach_id already exists."
        sleep 2
        addCoaches    
    else
       	read -p "Name: " name
    	read -p "Homeland: " homeland
   	read -p "Date of Birth: " dob
    	read -p "Last Experience: " last_experience
    	read -p "Deed Duration: " deed_duration
    	
        echo "$coach_id:$name:$homeland:$dob:$last_experience:$deed_duration" >> "$coach_info_file"
        sleep 2
        echo "Coach added successfully."
        sleep 2
        exitConfirmationAdmin
       
        
    fi
}


#Adding coach's info page end








#Adding Board member info page start

board_member_file_info="boardMembersInfo.txt"

addBoardMembers() {

clear
    echo "Enter board member's details to add Board member info:"
    read -p "Board Member ID: " member_id
    
    # Check if the board member already exists
    if grep -q "^$member_id:" "$board_member_file_info"; then
        echo "Board member with ID $member_id already exists."
        sleep 2
        addBoardMembers
        
    else
    
    	read -p "Name: " name
    	read -p "Designation: " designation
    	read -p "Duration: " duration
        echo "$member_id:$name:$designation:$duration" >> "$board_member_file_info"
        sleep 2	
   	echo "$name is Added successfully as Board Member! "
    	sleep 2
    	exitConfirmationAdmin
    fi


}


#Adding Board member info page end





#add upcoming matches start


upcoming_match_info_file="upcomingMatchesInfo.txt"

addUpcomingMatches() {
clear

    echo "Enter upcoming match details to add upcoming matches:"
    read -p "Upcoming Matches ID: " match_id
    
     # Check if the match already exists
    if grep -q "^$match_id:" "$upcoming_match_info_file"; then
        echo "Upcoming match with ID $match_id already exists."
        sleep 2
        addUpcomingMatches
	  
    else
    
    	read -p "Host Team: " host_team
    	read -p "Opponent Team: " opponent_team
    	read -p "Venue: " venue
    	read -p "Date: " date
    	read -p "Type: " type
        echo "$match_id:$host_team:$opponent_team:$venue:$date:$type" >> "$upcoming_match_info_file"        
        echo "Upcoming match added successfully."
        sleep 2
        exitConfirmationAdmin        
        
    fi
    
}


#add Upcoming matches End





#Updating player's Personal info page start
player_personal_info_file="player_personal_data.txt"

# Function to update player's personal info
updatePlayerPersonalInfo() {
clear
    read -p "Enter Jersey No to update player's personal info: " jersey
    if grep -q "^$jersey:" "$player_personal_info_file"; then
        echo "Enter updated player's details:"
        read -p "New Jersey No: " new_jersey
        read -p "Name: " name
        read -p "Date of Birth: " dob
        read -p "Age: " age
        read -p "Role: " role
        read -p "Batting Style: " batting_style
        read -p "Bowling Style: " bowling_style

        # Update player's information, including the Jersey No
        sed -i "s/^$jersey:.*$/$new_jersey:$name:$dob:$age:$role:$batting_style:$bowling_style/" "$player_personal_info_file"
        echo "Player information updated successfully."
        exitConfirmationAdmin
    else
    	sleep 2
        echo "Player with Jersey No $jersey does not exist."
        
       clear 
       sleep 2
       updatePlayerPersonalInfo
       
    	
    fi
}

#Updating player's Personal info page end






#Updating player's Statistical info page start


updatePlayerStatisticalInfo() {
clear

    read -p "Enter Jersey No to update player's statistical info: " jersey
    if grep -q "^$jersey:" "$player_stastical_info_file"; then
        echo "Enter updated player's details:"
        read -p "Played Matches: " played_match
        read -p "Innings Played: " innings_played
        read -p "Innings Not Out: " innings_not_out
        read -p "Balls Played: " balls_played
        read -p "Runs Taken: " runs_taken
        read -p "Balls Bowled: " balls_bowled
        read -p "Wickets Taken: " wickets_taken
        read -p "Centuries: " centuries
        read -p "Fifties: " fifties

        dismisal=$(expr $played_match - $innings_not_out)
        batting_avg=$(expr $runs_taken / $dismisal)
        bowling_strike_rate=$(expr $balls_bowled / $wickets_taken)
        batting_strike_rate=$(expr $runs_taken \* 100 / $balls_played)
        economy_rate=$(expr $runs_taken / $balls_bowled \* 6)

        # Update player's information
        sed -i "s/^$jersey:.*$/$jersey:$played_match:$innings_played:$innings_not_out:$balls_played:$runs_taken:$balls_bowled:$wickets_taken:$centuries:$fifties:$dismisal:$batting_avg:$bowling_strike_rate:$batting_strike_rate:$economy_rate/" "$player_stastical_info_file"
        
        echo "player's statistical info is updated successfully!"
        exitConfirmationAdmin
    else
        sleep 1
        echo "Player with Jersey No $jersey does not exist."
        
       clear 
       sleep 2
       updatePlayerPersonalInfo
    fi
}



#Updating player's Statistical info page end






#Updating coach's info page start

updateCoaches() {
    clear
    read -p "Enter Coach ID to update coach info: " coach_id
    if grep -q "^$coach_id:" "$coach_info_file"; then
        echo "Enter updated coach's details:"
        read -p "New Coach ID: " new_coach_id
        read -p "Name: " name
        read -p "Homeland: " homeland
        read -p "Date of Birth: " dob
        read -p "Last Experience: " last_experience
        read -p "Deed Duration: " deed_duration

        # Update coach's information, including the Coach ID
        sed -i "s/^$coach_id:.*$/$new_coach_id:$name:$homeland:$dob:$last_experience:$deed_duration/" "$coach_info_file"
        echo "Coach information updated."
        exitConfirmationAdmin
    else
        sleep 1
        echo "Player with Jersey No $coach_id does not exist."
        
       clear 
       sleep 2
       updatePlayerPersonalInfo
    fi
}

#Updating coach's info page end





#Updating Board member info page start


updateBoardMembers() {
clear

    read -p "Enter Board Member ID to update member info: " old_member_id
    if grep -q "^$old_member_id:" "$board_member_file_info"; then
        echo "Enter updated board member's details:"
        read -p "New Board Member ID: " new_member_id
        read -p "Name: " name
        read -p "Designation: " designation
        read -p "Duration: " duration

        # Update board member's information, including the Board Member ID
        sed -i "s/^$old_member_id:.*$/$new_member_id:$name:$designation:$duration/" "$board_member_file_info"
        echo "Board member information updated."
        exitConfirmationAdmin
    else
        echo "Board member with ID $old_member_id does not exist."
        sleep 2
        updateBoardMembers
    fi
}

#Updating Board member info page end






#update Upcoming Matches start


updateUpcomingMatches() {
clear

    read -p "Enter Upcoming Matches ID to update match info: " old_match_id
    if grep -q "^$old_match_id:" "$upcoming_match_info_file"; then
        echo "Enter updated upcoming match details:"
        read -p "New Upcoming Matches ID: " new_match_id
        read -p "Host Team: " host_team
        read -p "Opponent Team: " opponent_team
        read -p "Venue: " venue
        read -p "Date: " date
        read -p "Type: " type

        # Update upcoming match information, including the Upcoming Matches ID
        sed -i "s/^$old_match_id:.*$/$new_match_id:$host_team:$opponent_team:$venue:$date:$type/" "$upcoming_match_info_file"
        echo "Upcoming match information updated."
        exitConfirmationAdmin
    else
        echo "Upcoming match with ID $old_match_id does not exist."
        
        sleep 2
        update_upcoming_match
    fi
}



#update Upcoming Matches end






#pricing page start

pricing() {
clear

echo "Welcome to pricing page"

echo "1. Free \n"
echo "2. Premium \n"
echo "3. Ultra Premium \n"



echo "Select an option (1, 2, or 3):"
read option



case $option in
  1)
  
    freePricing
    
    ;;
  2)
  
    premiumPricing
    
    ;;
  3)
  
    ultraPremiumPricing
    
    ;;
  *)
    echo "Invalid option, please select 1, 2, or 3"
    ;;
esac


}


#price page end











#free pricing page start


freePricing() {
clear

echo "Welcome, you are in free mode\n"

echo "View Last 10 current players Info\n"

echo "View no retired players Info\n"

echo "View Last 6 added board members\n"

echo "View Last 5 added coaches Info\n"

echo "View Last 3 matches\n"

echo "1. Buy Premium"
echo "2. Cancel "
echo "Enter your choice : "
read choice 

if [ $choice -eq 1 ]; then
	payment

fi

}


#free pricing page end







  


#premium pricing page start


premiumPricing() {

echo "Welcome to premium users page\n"

echo '$5 / month'

echo "\nView all current players Info\n"

echo "View no retired players Info\n"

echo "View Last 15 added board members\n"

echo "View Last 7 added coaches Info\n"

echo "View Last 10 matches\n"

echo "1. buy"
echo "2. Cancel "
echo "Enter your choice : "
read choice 

if [ $choice -eq 1 ]; then
	payment

fi




}


#premium pricing page end









#Ultra-premium pricing page start


ultraPremiumPricing() {

echo '$10 / month'

echo "Welcome to premium users page\n"

echo "View all players Info\n"

echo "View all retired players Info\n"

echo "View all board members\n"

echo "View all coaches Info\n"

echo "View all matches\n"


echo "1. buy"
echo "2. Cancel "
echo "Enter your choice : "
read choice 

if [ $choice -eq 1 ]; then
	payment

fi

}

#Ultra-premium pricing page end











#payment function start

payment() {
clear

echo "Enter card holder name: "
read name
echo "Enter card holder number: "
read number
echo "Enter CVC number: "
read cvc
echo "Enter Amount: "
read amount

echo "1. confirm"
echo "2. cancel"

echo "Enter your choice (1 or 2) :"
read choice

if [ $choice -eq 1 ]; then
	echo "Payment Successfull"
	sleep 10
else
	pricing
fi

}

#payment function end



home



